{"version":3,"file":"static/js/main.edbaad8a.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../external commonjs \"react\"","../external commonjs \"react-dom/client\"","../external commonjs \"i18next\"","../external commonjs \"react-i18next\"","i18n.js","../external commonjs \"react-router-dom\"","../external commonjs \"react/jsx-runtime\"","context/AuthContext.js","pages/HomePage/HomePage.jsx","../external commonjs \"axios\"","api/TokenApi.js","api/operatorsAPI.js","../external commonjs \"@mui/material\"","../external commonjs \"@mui/icons-material\"","pages/ESD/Operator/OperatorModal/OperatorModal.jsx","pages/ESD/Operator/OperatorForm/OperatorForm.jsx","pages/ESD/Operator/OperatorEditForm/OperatorEditForm.jsx","../external commonjs \"react-bootstrap/Button\"","pages/ESD/Operator/OperatorConfirmModal/OperatorConfirmModal.jsx","../external commonjs \"@mui/icons-material/Search\"","../external commonjs \"@mui/material/InputAdornment\"","../external commonjs \"react-bootstrap/Row\"","../external commonjs \"react-bootstrap/Col\"","pages/ESD/Operator/OperatorTable/OperatorTable.jsx","../external commonjs \"@mui/material/AppBar\"","../external commonjs \"@mui/material/Box\"","../external commonjs \"@mui/material/Toolbar\"","../external commonjs \"@mui/material/Typography\"","../external commonjs \"@mui/material/Button\"","../external commonjs \"@mui/material/Drawer\"","../external commonjs \"@mui/material/List\"","../external commonjs \"@mui/material/ListItem\"","../external commonjs \"@mui/material/ListItemButton\"","../external commonjs \"@mui/material/ListItemIcon\"","../external commonjs \"@mui/material/ListItemText\"","../external commonjs \"@mui/material/Collapse\"","../external commonjs \"@mui/icons-material/Home\"","../external commonjs \"@mui/icons-material/PrecisionManufacturingOutlined\"","../external commonjs \"@mui/icons-material/AccountCircleOutlined\"","../external commonjs \"@mui/icons-material/SensorsOutlined\"","../external commonjs \"@mui/icons-material/PersonAdd\"","../external commonjs \"@mui/icons-material/ExpandLess\"","../external commonjs \"@mui/icons-material/ExpandMore\"","../external commonjs \"@mui/material/Card\"","../external commonjs \"@mui/material/CardContent\"","../external commonjs \"@mui/icons-material/Close\"","../external commonjs \"@mui/material/IconButton\"","pages/Menu/Menu.jsx","components/ESD/Operators/Operators.jsx","api/stationApi.js","pages/ESD/Stations/ESDModal/ESDModal.jsx","pages/ESD/Stations/ESDForm/ESDForm.jsx","pages/ESD/Stations/ESDEditForm/ESDEditForm.jsx","pages/ESD/Stations/ESDConfirmModal/ESDConfirmModal.jsx","pages/ESD/Stations/ESDTable/ESDTable.jsx","components/ESD/StationList/StationList.jsx","api/monitorApi.js","pages/ESD/Monitor/MonitorModal/MonitorModal.jsx","pages/ESD/Monitor/MonitorForm/MonitorForm.jsx","pages/ESD/Monitor/MonitorConfirmModal/MonitorConfirmModal.jsx","pages/ESD/Monitor/MonitorEditForm/MonitorEditForm.jsx","pages/ESD/Monitor/MonitorTable/MonitorTable.jsx","components/ESD/Monitors/Monitors.jsx","../external commonjs \"@mui/lab\"","pages/LoginPage/LoginPage.jsx","pages/SignUpPage/SignUpPage.jsx","ProtectedRoute.js","pages/ESD/ESDHome/ESDHomeModal/ESDHomeModal.jsx","../external commonjs \"@mui/x-data-grid\"","pages/ESD/ESDHome/ESDHomeDashboardPage/ESDHomeDashboardPage.jsx","pages/DashboardPage/DashboardPage.jsx","components/ESD/DashboardESD/DashboardESD.jsx","pages/ESD/Line/LineTable/LineTable.jsx","api/linerApi.js","components/ESD/Line/Line.jsx","AppRoutes.js","index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"./\";","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-dom/client\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"i18next\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-i18next\");","import i18n from \"i18next\";\r\nimport { useTranslation, initReactI18next } from \"react-i18next\";\r\nimport ptJSON from './locate/pt.json'\r\ni18n.use(initReactI18next).init({\r\n  resources: {\r\n    pt: { ...ptJSON },\r\n  },\r\n  lng: \"pt\",\r\n});","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-router-dom\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react/jsx-runtime\");","// AuthContext.js\r\nimport React, { createContext, useState, useContext } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n// Cria o contexto\r\nconst AuthContext = createContext();\r\n\r\n// Cria o provedor de contexto\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = (userData) => {\r\n    setUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('role')\r\n    localStorage.removeItem('name')\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook para usar o contexto de autenticação\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      navigate('/dashboard')\r\n    } else {\r\n      navigate('/login')\r\n    }\r\n  }, [])\r\n  \r\n  return (\r\n    <></>\r\n  )\r\n};\r\n\r\nexport default HomePage;\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","import axios from \"axios\";\r\n\r\nconst TokenApi = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL_FCT,\r\n});\r\n\r\nTokenApi.interceptors.request.use(config => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n        console.error(\"Token not found in localStorage\");\r\n    }\r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default TokenApi;\r\n","import TokenApi from \"./TokenApi\";\r\n\r\n// Fetch all operators\r\nexport const getAllOperators = async () => {\r\n    try {\r\n        const response = await TokenApi.get('/todosUsers');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Failed to fetch all operators\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Fetch a specific operator by ID\r\nexport const getOperators = async (id) => {\r\n    try {\r\n        const response = await TokenApi.get(`/BuscarOperatores/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(`Failed to fetch operator with ID ${id}`, error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Create a new operator\r\nexport const createOperators = async (operator) => {\r\n    const form = new FormData();\r\n    form.append(\"name\", operator.name);\r\n    form.append(\"badge\", operator.badge);\r\n\r\n    try {\r\n        const response = await TokenApi.post('/adicionar', form);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Failed to create operator\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Update an existing operator\r\nexport const updateOperators = async (operator) => {\r\n    try {\r\n        const response = await TokenApi.put(`/update/${operator.id}`, operator); // Changed to PUT method\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(`Failed to update operator with ID ${operator.id}`, error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Delete an operator by ID\r\nexport const deleteOperators = async (id) => {\r\n    try {\r\n        await TokenApi.delete(`/delete/${id}`);\r\n    } catch (error) {\r\n        console.error(`Failed to delete operator with ID ${id}`, error);\r\n        throw error;\r\n    }\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/icons-material\");","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"./OperatorModal.css\"; // Importando o arquivo CSS\r\n\r\nconst OperatorModal = ({ open, handleClose, operator }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Paper className=\"modal-paper\">\r\n        <Typography\r\n          variant=\"h6\"\r\n          id=\"contained-modal-title-vcenter\"\r\n          className=\"modal-title\"\r\n        >\r\n          {t(\"ESD_OPERATOR.TABLE.NAME\", {\r\n            appName: \"App for Translations\",\r\n          })} {operator.name}\r\n        </Typography>\r\n        <Box component=\"form\" noValidate autoComplete=\"off\">\r\n          <Typography id=\"modal-modal-description\" className=\"modal-textfield\">\r\n            <TextField\r\n              fullWidth\r\n              disabled\r\n              required\r\n              label={t(\"ESD_OPERATOR.TABLE.NAME\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              defaultValue={operator.name}\r\n              margin=\"normal\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              disabled\r\n              required\r\n              label={t(\"ESD_OPERATOR.TABLE.USER_ID\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              defaultValue={operator.badge}\r\n              margin=\"normal\"\r\n            />\r\n          </Typography>\r\n        </Box>\r\n        <Box className=\"modal-buttons\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            className=\"modal-close-button\"\r\n            onClick={handleClose}\r\n          >\r\n            {t(\"ESD_OPERATOR.DIALOG.CLOSE\", {\r\n              appName: \"App for Translations\",\r\n            })}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default OperatorModal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport './OperatorForm.css'; // Importe o arquivo CSS\r\n\r\nconst OperatorForm = ({ open, handleClose, onSubmit }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [station, setStation] = useState({\r\n    name: \"\",\r\n    badge: \"\",\r\n  });\r\n\r\n  const [errorName, setErrorName] = useState(\"\");\r\n  const [errorBadge, setErrorBadge] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setStation((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    // Clear errors on input change\r\n    if (name === \"name\") {\r\n      setErrorName(\"\");\r\n    }\r\n    if (name === \"badge\") {\r\n      setErrorBadge(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const nameRegex = /^(?![\\s-]+$)[\\w\\s-]{1,50}$/;\r\n\r\n    let valid = true;\r\n\r\n    if (!station.name) {\r\n      setErrorName(\"Este campo é obrigatório.\");\r\n      valid = false;\r\n    } else if (!nameRegex.test(station.name)) {\r\n      setErrorName(\r\n        \"Nome inválido. O nome deve conter apenas letras, números, hífens e underscores, e não pode ser composto apenas por espaços ou caracteres especiais. Além disso, deve ter no máximo 50 caracteres.\"\r\n      );\r\n      valid = false;\r\n    } else {\r\n      setErrorName(\"\");\r\n    }\r\n\r\n    if (!station.badge) {\r\n      setErrorBadge(\"Este campo é obrigatório.\");\r\n      valid = false;\r\n    } else {\r\n      setErrorBadge(\"\");\r\n    }\r\n\r\n    if (!valid) return;\r\n\r\n    try {\r\n      await onSubmit(station);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(\"Error creating operator:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Paper className=\"modal-paper\">\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n          {t(\"ESD_OPERATOR.ADD_OPERATOR\", { appName: \"App for Translations\" })}\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label={t(\"ESD_OPERATOR.TABLE.NAME\", { appName: \"App for Translations\" })}\r\n            onChange={handleChange}\r\n            error={!!errorName}\r\n            helperText={errorName || \"Este campo é obrigatório.\"}\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"badge\"\r\n            name=\"badge\"\r\n            label={t(\"ESD_OPERATOR.TABLE.USER_ID\", { appName: \"App for Translations\" })}\r\n            onChange={handleChange}\r\n            error={!!errorBadge}\r\n            helperText={errorBadge || \"Este campo é obrigatório.\"}\r\n          />\r\n          <Box className=\"modal-buttons\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              className=\"modal-submit-button\"\r\n            >\r\n              {t(\"ESD_TEST.DIALOG.SAVE\", { appName: \"App for Translations\" })}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default OperatorForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  FormControl,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"./OperatorEditForm.css\"; // Importando o arquivo CSS\r\n\r\nconst OperatorEditForm = ({ open, handleClose, onSubmit, initialData }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [operator, setOperator] = useState({\r\n    name: \"\",\r\n    badge: \"\",\r\n  });\r\n\r\n  const [errorName, setErrorName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setOperator(initialData);\r\n    }\r\n  }, [initialData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setOperator((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    // Clear errors on input change\r\n    if (name === \"name\") {\r\n      setErrorName(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const nameRegex = /^(?![\\s-]+$)[\\w-]{1,50}$/;\r\n\r\n    if (!nameRegex.test(operator.name)) {\r\n      setErrorName(\r\n        \"Nome inválido. O nome deve conter apenas letras, números, hífens e underscores, e não pode ser composto apenas por espaços ou caracteres especiais. Além disso, deve ter no máximo 50 caracteres.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    setErrorName(\"\");\r\n\r\n    try {\r\n      await onSubmit(operator);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(\"Error creating or updating operator:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Paper className=\"modal-paper\">\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n          {t(\"ESD_OPERATOR.DIALOG.EDIT_OPERATOR\", {\r\n            appName: \"App for Translations\",\r\n          })}\r\n        </Typography>\r\n        <Box\r\n          component=\"form\"\r\n          onSubmit={handleSubmit}\r\n          className=\"form-container\"\r\n        >\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"outlined-name\"\r\n              name=\"name\"\r\n              label={t(\"ESD_OPERATOR.TABLE.NAME\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              value={operator.name}\r\n              onChange={handleChange}\r\n              error={!!errorName}\r\n              helperText={errorName || \"Este campo é obrigatório.\"}\r\n            />\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"outlined-badge\"\r\n              name=\"badge\"\r\n              label={t(\"ESD_OPERATOR.TABLE.USER_ID\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              disabled\r\n              value={operator.badge}\r\n            />\r\n          </FormControl>\r\n          <Box className=\"modal-buttons\">\r\n            <Button onClick={handleClose} variant=\"outlined\" color=\"success\">\r\n              {t(\"ESD_TEST.DIALOG.CLOSE\", { appName: \"App for Translations\" })}\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              className=\"modal-submit-button\"\r\n            >\r\n              {t(\"ESD_TEST.DIALOG.SAVE\", { appName: \"App for Translations\" })}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default OperatorEditForm;\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-bootstrap/Button\");","import React from \"react\";\r\nimport { Modal, Box, Typography } from \"@mui/material\";\r\nimport ButtonBootstrap from \"react-bootstrap/Button\";\r\n\r\nconst OperatorConfirmModal = ({ open, handleClose, handleConfirm, title, description }) => {\r\n    const modalStyle = {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      width: 400,\r\n      bgcolor: 'background.paper',\r\n      boxShadow: 24,\r\n      p: 4,\r\n      borderRadius: 2,\r\n    };\r\n  return (\r\n    <Modal open={open} onClose={handleClose}>\r\n      <Box sx={{ ...modalStyle }}>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {title}\r\n        </Typography>\r\n        <Typography sx={{ mt: 2 }}>\r\n          {description}\r\n        </Typography>\r\n        <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n          <ButtonBootstrap style={{ marginTop: \"10px\", marginLeft: \"4px\" }}\r\n              variant=\"outline-success\" onClick={handleClose} sx={{ mr: 1 }}>Cancel</ButtonBootstrap>\r\n          <ButtonBootstrap style={{ marginTop: \"10px\", marginLeft: \"4px\" }}\r\n              variant=\"danger\" onClick={handleConfirm} color=\"error\">Delete</ButtonBootstrap>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nexport default OperatorConfirmModal;\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/icons-material/Search\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/InputAdornment\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-bootstrap/Row\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-bootstrap/Col\");","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  getAllOperators,\r\n  createOperators,\r\n  deleteOperators,\r\n} from \"../../../../api/operatorsAPI\";\r\nimport {\r\n  IconButton,\r\n  Box,\r\n  Snackbar,\r\n  Alert,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Container,\r\n  TablePagination,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { Delete, Info, Edit as EditIcon } from \"@mui/icons-material\";\r\nimport OperatorModal from \"../OperatorModal/OperatorModal\";\r\nimport OperatorForm from \"../OperatorForm/OperatorForm\";\r\nimport OperatorEditForm from \"../OperatorEditForm/OperatorEditForm\";\r\nimport OperatorConfirmModal from \"../OperatorConfirmModal/OperatorConfirmModal\";\r\nimport \"./SnackbarStyles.css\";\r\nimport \"./OperatorTable.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst OperatorTable = () => {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n  const [state, setState] = useState({\r\n    allOperators: [],\r\n    operator: {},\r\n    open: false,\r\n    openModal: false,\r\n    openEditModal: false,\r\n    editCell: null,\r\n    editData: null,\r\n    deleteConfirmOpen: false,\r\n    operatorToDelete: null,\r\n    snackbarOpen: false,\r\n    snackbarMessage: \"\",\r\n    snackbarSeverity: \"success\",\r\n    loading: true, // Adicionei esta linha\r\n  });\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchBadge, setSearchBadge] = useState(\"\");\r\n\r\n  const handleStateChange = (changes) => {\r\n    setState((prevState) => ({ ...prevState, ...changes }));\r\n  };\r\n\r\n  const showSnackbar = useCallback((message, severity = \"success\") => {\r\n    handleStateChange({\r\n      snackbarMessage: message,\r\n      snackbarSeverity: severity,\r\n      snackbarOpen: true,\r\n    });\r\n  }, []);\r\n\r\n  const handleOpen = (operator) => handleStateChange({ operator, open: true });\r\n  const handleClose = () => handleStateChange({ open: false });\r\n  const handleEditClose = () =>\r\n    handleStateChange({ openEditModal: false, editData: null });\r\n  const handleOpenModal = () => handleStateChange({ openModal: true });\r\n  const handleCloseModal = () => handleStateChange({ openModal: false });\r\n  const handleDeleteOpen = (operator) =>\r\n    handleStateChange({ operator, operatorToDelete: operator, deleteConfirmOpen: true });\r\n  const handleDeleteClose = () =>\r\n    handleStateChange({ deleteConfirmOpen: false, operatorToDelete: null });\r\n\r\n  const handleEditOpen = (operator) => {\r\n    handleStateChange({ editData: operator, openEditModal: true });\r\n  };\r\n\r\n  const handleCreateOperator = async (operator) => {\r\n    try {\r\n      const response = await createOperators(operator);\r\n      const result = await getAllOperators();\r\n      handleStateChange({ allOperators: result.value });\r\n      showSnackbar(\r\n        t(\"ESD_OPERATOR.TOAST.CREATE_SUCCESS\", { appName: \"App for Translations\" })\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_OPERATOR.TOAST.TOAST_ERROR\", { appName: \"App for Translations\" }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteOperators(id);\r\n      handleStateChange({\r\n        allOperators: state.allOperators.filter(\r\n          (operator) => operator.id !== id\r\n        ),\r\n      });\r\n      showSnackbar(\r\n        t(\"ESD_OPERATOR.TOAST.DELETE_SUCCESS\", {\r\n          appName: \"App for Translations\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_OPERATOR.TOAST.TOAST_ERROR\", {\r\n          appName: \"App for Translations\",\r\n        }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEditCellChange = async (params) => {\r\n    try {\r\n      const response = await createOperators(params);\r\n      const result = await getAllOperators();\r\n      handleStateChange({ allOperators: result.value });\r\n      showSnackbar(\r\n        t(\"ESD_OPERATOR.TOAST.UPDATE_SUCCESS\", {\r\n          appName: \"App for Translations\",\r\n        })\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      showSnackbar(error.response.data.errors.Name, \"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchDataAllOperators = async () => {\r\n      try {\r\n        const result = await getAllOperators();\r\n        handleStateChange({ allOperators: result.value });\r\n      } catch (error) {\r\n        if (error.message === \"Request failed with status code 401\") {\r\n          localStorage.removeItem(\"token\");\r\n          navigate(\"/\");\r\n        }\r\n        showSnackbar(t(error.message));\r\n      }\r\n    };\r\n    fetchDataAllOperators();\r\n  }, [navigate, showSnackbar, t]); // Dependencies are now correct\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (state.operatorToDelete) {\r\n      await handleDelete(state.operatorToDelete.id);\r\n      handleDeleteClose();\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearchNameChange = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  const handleSearchBadgeChange = (event) => {\r\n    setSearchBadge(event.target.value);\r\n  };\r\n\r\n  const filterOperators = () => {\r\n    return state.allOperators.filter((operator) => {\r\n      return (\r\n        operator.name.toLowerCase().includes(searchName.toLowerCase()) &&\r\n        operator.badge.toLowerCase().includes(searchBadge.toLowerCase())\r\n      );\r\n    });\r\n  };\r\n\r\n  const displayOperators = filterOperators().slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col sm={10}>\r\n            <TextField\r\n              name=\"filterName\"\r\n              label={t(\"ESD_OPERATOR.TABLE.NAME\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              variant=\"outlined\"\r\n              value={state.filterName}\r\n              onChange={handleSearchNameChange}\r\n              sx={{ mb: 2, mr: 2 }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              name=\"filterDescription\"\r\n              label={t(\"ESD_OPERATOR.TABLE.USER_ID\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              variant=\"outlined\"\r\n              value={state.filterDescription}\r\n              onChange={handleSearchBadgeChange}\r\n              sx={{ mb: 2 }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col sm={2}>\r\n            <Button\r\n              id=\"add-button\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              onClick={handleOpenModal}\r\n              sx={{ mb: 2, ml: 2 }}\r\n            >\r\n              {t(\"ESD_OPERATOR.ADD_OPERATOR\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Box>\r\n          <List>\r\n            {displayOperators.map((operator) => (\r\n              <ListItem\r\n                key={operator.id}\r\n                divider\r\n                sx={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <Tooltip\r\n                  title={`Nome: ${operator.name}, Matricula: ${operator.badge}`}\r\n                  arrow\r\n                >\r\n                  <ListItemText\r\n                    primary={operator.name}\r\n                    secondary={operator.badge}\r\n                    className=\"textOverflow\" // Apply the new CSS class\r\n                  />\r\n                </Tooltip>\r\n                <ListItemSecondaryAction>\r\n                  <Tooltip title={t(\"ESD_OPERATOR.EDIT_OPERATOR\")}>\r\n                    <IconButton\r\n                      edge=\"end\"\r\n                      aria-label=\"edit\"\r\n                      onClick={() => handleEditOpen(operator)}\r\n                    >\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title={t(\"ESD_OPERATOR.INFO_OPERATOR\")}>\r\n                    <IconButton\r\n                      edge=\"end\"\r\n                      aria-label=\"info\"\r\n                      onClick={() => handleOpen(operator)}\r\n                    >\r\n                      <Info />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title={t(\"ESD_OPERATOR.DELETE_OPERATOR\")}>\r\n                    <IconButton\r\n                      edge=\"end\"\r\n                      aria-label=\"delete\"\r\n                      onClick={() => handleDeleteOpen(operator)}\r\n                    >\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={filterOperators().length}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100]}\r\n          />\r\n        </Box>\r\n        <OperatorModal\r\n          open={state.open}\r\n          handleClose={handleClose}\r\n          operatorName={state.operator.name}\r\n          operator={state.operator}\r\n        />\r\n        <OperatorForm\r\n          open={state.openModal}\r\n          handleClose={handleCloseModal}\r\n          onSubmit={handleCreateOperator}\r\n        />\r\n        <OperatorEditForm\r\n          open={state.openEditModal}\r\n          handleClose={handleEditClose}\r\n          onSubmit={handleEditCellChange}\r\n          initialData={state.editData}\r\n        />\r\n        <OperatorConfirmModal\r\n          open={state.deleteConfirmOpen}\r\n          handleClose={handleDeleteClose}\r\n          handleConfirm={handleConfirmDelete}\r\n          title={t(\"ESD_OPERATOR.CONFIRM_DIALOG.DELETE_OPERATOR\", {\r\n            appName: \"App for Translations\",\r\n          })}\r\n          description={t(\"ESD_OPERATOR.CONFIRM_DIALOG.CONFIRM_TEXT\", {\r\n            appName: \"App for Translations\",\r\n          }) + \" \" + state.operator.name + \"?\"}\r\n        />\r\n        <Snackbar\r\n          open={state.snackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={() => handleStateChange({ snackbarOpen: false })}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          className={`snackbar-content snackbar-${state.snackbarSeverity}`}\r\n        >\r\n          <Alert\r\n            onClose={() => handleStateChange({ snackbarOpen: false })}\r\n            severity={state.snackbarSeverity}\r\n            sx={{\r\n              backgroundColor: \"inherit\",\r\n              color: \"inherit\",\r\n              fontWeight: \"inherit\",\r\n              boxShadow: \"inherit\",\r\n              borderRadius: \"inherit\",\r\n              padding: \"inherit\",\r\n            }}\r\n          >\r\n            {state.snackbarMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OperatorTable;\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/AppBar\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/Box\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/Toolbar\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/Typography\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/Button\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/Drawer\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/List\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/ListItem\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/ListItemButton\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/ListItemIcon\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/ListItemText\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/Collapse\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/icons-material/Home\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/icons-material/PrecisionManufacturingOutlined\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/icons-material/AccountCircleOutlined\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/icons-material/SensorsOutlined\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/icons-material/PersonAdd\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/icons-material/ExpandLess\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/icons-material/ExpandMore\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/Card\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/CardContent\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/icons-material/Close\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/material/IconButton\");","import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport PrecisionManufacturingOutlinedIcon from \"@mui/icons-material/PrecisionManufacturingOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\r\nimport SensorsOutlinedIcon from \"@mui/icons-material/SensorsOutlined\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\r\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport \"./Menu.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CloseIcon from '@mui/icons-material/Close'; // Ícone de fechar\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n// Funções de utilitário\r\nconst getUserRoleFromToken = (token) => {\r\n  return token === \"administrator\" ? \"administrator\" : \"operator\";\r\n};\r\n\r\nconst getMenuItems = (userRole) => {\r\n  const allItems = [\r\n    {\r\n      text: \"Controle\",\r\n      icon: <HomeIcon />,\r\n      path: \"/dashboard\",\r\n      roles: [\"administrator\", \"operator\"],\r\n      subItems: [\r\n        {\r\n          text: \"Linhas\",\r\n          path: \"/liners\",\r\n        },\r\n        \r\n      ],\r\n    },\r\n    {\r\n      text: \"Operadores\",\r\n      icon: <AccountCircleOutlinedIcon />,\r\n      path: \"/users\",\r\n      roles: [\"administrator\"],\r\n    },\r\n    {\r\n      text: \"Jigs\",\r\n      icon: <PrecisionManufacturingOutlinedIcon />,\r\n      path: \"/stations\",\r\n      roles: [\"operator\", \"administrator\"],\r\n    },\r\n    {\r\n      text: \"Monitores\",\r\n      icon: <SensorsOutlinedIcon />,\r\n      path: \"/monitors\",\r\n      roles: [\"operator\", \"administrator\"],\r\n    },\r\n    {\r\n      text: \"Cadastrar\",\r\n      icon: <PersonAddIcon />,\r\n      path: \"/register\",\r\n      roles: [\"administrator\"],\r\n    },\r\n  ];\r\n\r\n  return allItems.filter((item) => item.roles.includes(userRole));\r\n};\r\n\r\n// Componente do MenuList\r\nconst MenuList = ({ menuItems }) => {\r\n  const [expandedItem, setExpandedItem] = useState(null); // Gerenciar o item expandido\r\n  const location = useLocation(); // Obter a localização atual\r\n  \r\n  const currentPath = location.pathname; // Caminho atual\r\n  \r\n  // Função para lidar com o clique em um item de menu\r\n  const handleItemClick = (item) => {\r\n    setExpandedItem(expandedItem === item ? null : item); // Alternar entre expandido e colapsado\r\n  };\r\n\r\n  // Detectar mudança de rota e fechar o dropdown se o item não for o expandido\r\n  useEffect(() => {\r\n    const currentItem = menuItems.find(item => item.subItems?.some(subItem => subItem.path === currentPath));\r\n    if (currentItem && expandedItem !== currentItem.text) {\r\n      setExpandedItem(currentItem.text);\r\n    }\r\n  }, [location, menuItems, expandedItem, currentPath]);\r\n\r\n  // Função para verificar se o item é o selecionado\r\n  const isSelected = (path) => currentPath === path;\r\n\r\n  return (\r\n    <List>\r\n      {menuItems.map((item, index) => (\r\n        <React.Fragment key={index}>\r\n          <ListItem disablePadding sx={{ display: \"block\" }}>\r\n            <ListItemButton\r\n              component={Link}\r\n              to={item.path}\r\n              onClick={() => {\r\n                if (item.subItems) {\r\n                  handleItemClick(item.text);\r\n                }\r\n              }}\r\n              className={`list-items-buttons ${isSelected(item.path) ? 'selected' : ''}`}\r\n            >\r\n              <ListItemIcon className=\"list-items-buttons-icons\">\r\n                {item.icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n              {item.subItems && (\r\n                <IconButton edge=\"end\">\r\n                  {expandedItem === item.text ? <ExpandLess /> : <ExpandMore />}\r\n                </IconButton>\r\n              )}\r\n            </ListItemButton>\r\n          </ListItem>\r\n          {expandedItem === item.text && item.subItems && (\r\n            <List component=\"div\" disablePadding className=\"drawer-sublist\">\r\n              {item.subItems.map((subItem, subIndex) => (\r\n                <ListItem key={subIndex} disablePadding>\r\n                  <ListItemButton\r\n                    component={Link}\r\n                    to={subItem.path}\r\n                    className={isSelected(subItem.path) ? 'selected' : ''}\r\n                  >\r\n                    <ListItemText primary={subItem.text} />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\n// Componente principal Menu\r\nexport default function Menu({ componentToShow }) {\r\n  const token = localStorage.getItem(\"role\");\r\n  const name = localStorage.getItem(\"name\");\r\n  const userRole = getUserRoleFromToken(token);\r\n  const menuItems = getMenuItems(userRole);\r\n  const { logout } = useAuth();\r\n  const [open] = useState(true);\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <AppBar\r\n        sx={{\r\n          zIndex: (theme) => theme.zIndex.drawer + 1,\r\n          backgroundColor: \"#4caf50\",\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            FCT Auto Test\r\n          </Typography>\r\n          <Typography sx={{ mr: 2 }}>{name}</Typography>\r\n          <Button onClick={logout} color=\"inherit\" component={Link} to=\"/login\">\r\n            Sair\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer variant=\"permanent\" open={open}>\r\n        <div className=\"drawer-paper\">\r\n          <MenuList menuItems={menuItems} />\r\n        </div>\r\n      </Drawer>\r\n      <Box component=\"main\" className=\"main-content\">\r\n        <Card\r\n          sx={{ overflowY: \"auto\", overflowX: \"auto\" }}\r\n          className=\"drawer-card\"\r\n        >\r\n          <CardContent>{componentToShow}</CardContent>\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import OperatorTable from \"../../../pages/ESD/Operator/OperatorTable/OperatorTable\";\r\nimport Menu from \"../../../pages/Menu/Menu\";\r\n\r\nfunction Operators() {\r\n    return <Menu componentToShow={<OperatorTable/>}></Menu>\r\n  }\r\n  \r\n  export default Operators;\r\n  ","import axios from 'axios';\r\nimport TokenApi from \"./TokenApi\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL_FCT;\r\n\r\n// Função auxiliar para manipulação de respostas\r\nconst handleResponse = async (request) => {\r\n    try {\r\n        const response = await request();\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"API call failed: \", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getAllJigs = async () => {\r\n    return handleResponse(() => TokenApi.get('/todosJigs'));\r\n};\r\n\r\nexport const getStation = async (id) => {\r\n    return handleResponse(() => TokenApi.get(`${API_BASE_URL}buscarJig/${id}`));\r\n};\r\n\r\nexport const createJigs = async (station) => {\r\n    return handleResponse(() => TokenApi.post('/gerenciarJigs', station));\r\n};\r\n\r\nexport const updateJigs = async (station) => {\r\n    return handleResponse(() => TokenApi.put('/gerenciarJigs', station));\r\n};\r\n\r\nexport const deleteJigs = async (id) => {\r\n    return handleResponse(() => TokenApi.delete(`/deleteJigs/${id}`));\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst ESDModal = ({ open, handleClose, station }) => {\r\n  const {\r\n    t,\r\n  } = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Paper sx={style}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          id=\"contained-modal-title-vcenter\"\r\n          gutterBottom\r\n        >\r\n          {station.name}\r\n        </Typography>\r\n        <Box component=\"form\" noValidate autoComplete=\"off\">\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              disabled\r\n              required\r\n              label={t(\"ESD_TEST.TABLE.USER_ID\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              defaultValue={station.description}\r\n              margin=\"normal\"\r\n            />\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              disabled\r\n              required\r\n              label={t(\"ESD_TEST.TABLE.NAME\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              defaultValue={station.name}\r\n              margin=\"normal\"\r\n            />\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ mt: 2, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Button variant=\"contained\" color=\"success\" onClick={handleClose}>\r\n            {t(\"ESD_TEST.DIALOG.CLOSE\", { appName: \"App for Translations\" })}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ESDModal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst ESDForm = ({ open, handleClose, onSubmit }) => {\r\n  const {\r\n    t,\r\n  } = useTranslation();\r\n\r\n  const [station, setStation] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setStation((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await onSubmit(station);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(\"Error creating bracelet:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Paper sx={style}>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n          {t(\"ESD_TEST.DIALOG.CREATE_STATION\", {\r\n            appName: \"App for Translations\",\r\n          })}\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label={t(\"ESD_TEST.TABLE.USER_ID\", {\r\n              appName: \"App for Translations\",\r\n            })}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            label={t(\"ESD_TEST.TABLE.NAME\", {\r\n              appName: \"App for Translations\",\r\n            })}\r\n            onChange={handleChange}\r\n          />\r\n          <Box sx={{ mt: 2, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            sx={{ mt: 2, display: \"flex\", justifyContent: \"flex-end\" }}\r\n          >\r\n            {t(\"ESD_TEST.DIALOG.SAVE\", { appName: \"App for Translations\" })}\r\n          </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ESDForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst ESDEditForm = ({ open, handleClose, onSubmit, initialData }) => {\r\n  const {\r\n    t,\r\n    i18n: { changeLanguage, language },\r\n  } = useTranslation();\r\n  const [currentLanguage, setCurrentLanguage] = useState(language);\r\n\r\n  const handleChangeLanguage = () => {\r\n    const newLanguage = currentLanguage === \"en\" ? \"pt\" : \"en\";\r\n    setCurrentLanguage(newLanguage);\r\n    changeLanguage(newLanguage);\r\n  };\r\n\r\n  const [station, setStation] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setStation(initialData);\r\n    }\r\n  }, [initialData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setStation((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await onSubmit(station);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(\"Error creating or updating station:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Paper sx={style}>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n          {t(\"ESD_TEST.DIALOG.EDIT_STATION\", {\r\n            appName: \"App for Translations\",\r\n          })}\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"outlined-name\"\r\n            name=\"name\"\r\n            label={t(\"ESD_TEST.TABLE.USER_ID\", {\r\n              appName: \"App for Translations\",\r\n            })}\r\n            value={station.name}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"outlined-description\"\r\n            name=\"description\"\r\n            label={t(\"ESD_TEST.TABLE.NAME\", {\r\n              appName: \"App for Translations\",\r\n            })}\r\n            value={station.description}\r\n            onChange={handleChange}\r\n          />\r\n          <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\r\n            <Button\r\n              onClick={handleClose}\r\n              variant=\"outlined\"\r\n              color=\"success\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              {t(\"ESD_TEST.DIALOG.CLOSE\", { appName: \"App for Translations\" })}\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"success\">\r\n              {t(\"ESD_TEST.DIALOG.SAVE\", { appName: \"App for Translations\" })}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ESDEditForm;\r\n","import React from \"react\";\r\nimport { Modal, Box, Typography } from \"@mui/material\";\r\nimport ButtonBootstrap from \"react-bootstrap/Button\";\r\n\r\nconst ESDConfirmModal = ({ open, handleClose, handleConfirm, title, description }) => {\r\n    const modalStyle = {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      width: 400,\r\n      bgcolor: 'background.paper',\r\n      boxShadow: 24,\r\n      p: 4,\r\n      borderRadius: 2,\r\n    };\r\n  return (\r\n    <Modal open={open} onClose={handleClose}>\r\n      <Box sx={{ ...modalStyle }}>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {title}\r\n        </Typography>\r\n        <Typography sx={{ mt: 2 }}>\r\n          {description}\r\n        </Typography>\r\n        <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n          <ButtonBootstrap style={{ marginTop: \"10px\", marginLeft: \"4px\" }}\r\n              variant=\"outline-success\" onClick={handleClose} sx={{ mr: 1 }}>Cancel</ButtonBootstrap>\r\n          <ButtonBootstrap style={{ marginTop: \"10px\", marginLeft: \"4px\" }}\r\n              variant=\"danger\" onClick={handleConfirm} color=\"error\">Delete</ButtonBootstrap>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nexport default ESDConfirmModal;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  getAllJigs,\r\n  createJigs,\r\n  deleteJigs,\r\n  updateJigs,\r\n} from \"../../../../api/stationApi\";\r\nimport {\r\n  IconButton,\r\n  Box,\r\n  Snackbar,\r\n  Alert,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  TextField,\r\n  Container,\r\n  TablePagination,\r\n  Typography,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { Delete, Info, Edit as EditIcon } from \"@mui/icons-material\";\r\nimport ESDModal from \"../ESDModal/ESDModal\";\r\nimport ESDForm from \"../ESDForm/ESDForm\";\r\nimport ESDEditForm from \"../ESDEditForm/ESDEditForm\";\r\nimport ESDConfirmModal from \"../ESDConfirmModal/ESDConfirmModal\";\r\nimport \"./SnackbarStyles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst ESDTable = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const [state, setState] = useState({\r\n    allJigs: [],\r\n    station: {},\r\n    open: false,\r\n    openModal: false,\r\n    openEditModal: false,\r\n    editData: null,\r\n    deleteConfirmOpen: false,\r\n    stationToDelete: null,\r\n    snackbarOpen: false,\r\n    snackbarMessage: \"\",\r\n    snackbarSeverity: \"success\",\r\n    loading: true,\r\n  });\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchDescription, setSearchDescription] = useState(\"\");\r\n\r\n  const handleStateChange = (changes) => {\r\n    setState((prevState) => ({ ...prevState, ...changes }));\r\n  };\r\n\r\n  const showSnackbar = useCallback((message, severity = \"success\") => {\r\n    handleStateChange({\r\n      snackbarMessage: message,\r\n      snackbarSeverity: severity,\r\n      snackbarOpen: true,\r\n    });\r\n  }, []);\r\n\r\n  const handleOpen = (station) => handleStateChange({ station, open: true });\r\n  const handleClose = () => handleStateChange({ open: false });\r\n  const handleEditClose = () =>\r\n    handleStateChange({ openEditModal: false, editData: null });\r\n  const handleOpenModal = () => handleStateChange({ openModal: true });\r\n  const handleCloseModal = () => handleStateChange({ openModal: false });\r\n  const handleDeleteOpen = (station) =>\r\n    handleStateChange({ stationToDelete: station, deleteConfirmOpen: true });\r\n  const handleDeleteClose = () =>\r\n    handleStateChange({ deleteConfirmOpen: false, stationToDelete: null });\r\n\r\n  const handleEditOpen = (station) => {\r\n    handleStateChange({ editData: station, openEditModal: true });\r\n  };\r\n\r\n  const handleCreateMonitor = async (station) => {\r\n    try {\r\n      await createJigs(station);\r\n      const result = await getAllJigs();\r\n      handleStateChange({ allJigs: result, loading: false });\r\n      showSnackbar(\r\n        t(\"ESD_TEST.TOAST.CREATE_SUCCESS\", { appName: \"App for Translations\" })\r\n      );\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_TEST.TOAST.TOAST_ERROR\", { appName: \"App for Translations\" }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteJigs(id);\r\n      handleStateChange({\r\n        allJigs: state.allJigs.filter((station) => station.id !== id),\r\n      });\r\n      showSnackbar(\r\n        t(\"ESD_TEST.TOAST.DELETE_SUCCESS\", { appName: \"App for Translations\" }),\r\n        \"success\"\r\n      );\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_TEST.TOAST.TOAST_ERROR\", { appName: \"App for Translations\" }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEditCellChange = async (params) => {\r\n    try {\r\n      await createJigs(params);\r\n      const result = await getAllJigs();\r\n      handleStateChange({ allJigs: result, loading: false });\r\n      showSnackbar(\r\n        t(\"ESD_TEST.TOAST.UPDATE_SUCCESS\", { appName: \"App for Translations\" })\r\n      );\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_TEST.TOAST.TOAST_ERROR\", { appName: \"App for Translations\" }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchDataAllUsers = async () => {\r\n      try {\r\n        const result = await getAllJigs();\r\n        handleStateChange({ allJigs: result, loading: false });\r\n      } catch (error) {\r\n        if (error.message === \"Request failed with status code 401\") {\r\n          localStorage.removeItem(\"token\");\r\n          navigate(\"/\");\r\n        }\r\n        showSnackbar(t( error.response.data), \"error\");\r\n        handleStateChange({ loading: false });\r\n      }\r\n    };\r\n    fetchDataAllUsers();\r\n  }, [navigate, t]);\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (state.stationToDelete) {\r\n      await handleDelete(state.stationToDelete.id);\r\n      handleDeleteClose();\r\n    }\r\n  };\r\n\r\n  const handleSearchNameChange = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  const handleSearchDescription = (event) => {\r\n    setSearchDescription(event.target.value);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const filterJigs = () => {\r\n    return state.allJigs.filter((jig) => {\r\n      return (\r\n        jig.name.toLowerCase().includes(searchName.toLowerCase()) &&\r\n        jig.description.toLowerCase().includes(searchDescription.toLowerCase())\r\n      );\r\n    });\r\n  };\r\n\r\n  const paginatedJigs = filterJigs().slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Typography paragraph>\r\n        <Container>\r\n          <Box>\r\n            <Row>\r\n              <Col sm={10}>\r\n                <TextField\r\n                  name=\"filterName\"\r\n                  label={t(\"ESD_TEST.TABLE.USER_ID\", {\r\n                    appName: \"App for Translations\",\r\n                  })}\r\n                  variant=\"outlined\"\r\n                  value={searchName}\r\n                  onChange={handleSearchNameChange}\r\n                  sx={{ mb: 2, mr: 2 }}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <TextField\r\n                  name=\"filterDescription\"\r\n                  label={t(\"ESD_TEST.TABLE.NAME\", {\r\n                    appName: \"App for Translations\",\r\n                  })}\r\n                  variant=\"outlined\"\r\n                  value={searchDescription}\r\n                  onChange={handleSearchDescription}\r\n                  sx={{ mb: 2 }}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col sm={2}>\r\n                <Button\r\n                  id=\"add-button\"\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  onClick={handleOpenModal}\r\n                  sx={{ mb: 2, ml: 2 }}\r\n                >\r\n                  {t(\"ESD_TEST.ADD_STATION\", {\r\n                    appName: \"App for Translations\",\r\n                  })}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            {state.loading ? (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                mt={2}\r\n              >\r\n                <CircularProgress />\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  align=\"center\"\r\n                  color=\"textSecondary\"\r\n                  ml={2}\r\n                >\r\n                  {t(\"ESD_TEST.LOADING\", {\r\n                    appName: \"App for Translations\",\r\n                  })}\r\n                </Typography>\r\n              </Box>\r\n            ) : paginatedJigs.length === 0 ? (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                mt={2}\r\n              >\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  align=\"center\"\r\n                  color=\"textSecondary\"\r\n                  ml={2}\r\n                >\r\n                  Sua lista está vazia\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <List>\r\n                {paginatedJigs.map((station) => (\r\n                  <ListItem key={station.id} divider>\r\n                    <ListItemText\r\n                      primary={station.name}\r\n                      secondary={station.description}\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"edit\"\r\n                        onClick={() => handleEditOpen(station)}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"info\"\r\n                        onClick={() => handleOpen(station)}\r\n                      >\r\n                        <Info />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"delete\"\r\n                        onClick={() => handleDeleteOpen(station)}\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            )}\r\n            <TablePagination\r\n              component=\"div\"\r\n              count={filterJigs().length}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              rowsPerPage={rowsPerPage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n            <ESDModal\r\n              open={state.open}\r\n              handleClose={handleClose}\r\n              stationName={state.station.name}\r\n              station={state.station}\r\n            />\r\n            <ESDForm\r\n              open={state.openModal}\r\n              handleClose={handleCloseModal}\r\n              onSubmit={handleCreateMonitor}\r\n            />\r\n            <ESDEditForm\r\n              open={state.openEditModal}\r\n              handleClose={handleEditClose}\r\n              onSubmit={handleEditCellChange}\r\n              initialData={state.editData}\r\n            />\r\n            <ESDConfirmModal\r\n              open={state.deleteConfirmOpen}\r\n              handleClose={handleDeleteClose}\r\n              handleConfirm={handleConfirmDelete}\r\n              title={t(\"ESD_TEST.CONFIRM_DIALOG.DELETE_STATION\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              description={t(\"ESD_TEST.CONFIRM_DIALOG.CONFIRM-TEXT\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n            />\r\n            <Snackbar\r\n              open={state.snackbarOpen}\r\n              autoHideDuration={6000}\r\n              onClose={() => handleStateChange({ snackbarOpen: false })}\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              className={`snackbar-content snackbar-${state.snackbarSeverity}`}\r\n            >\r\n              <Alert\r\n                onClose={() => handleStateChange({ snackbarOpen: false })}\r\n                severity={state.snackbarSeverity}\r\n                sx={{\r\n                  backgroundColor: \"inherit\",\r\n                  color: \"inherit\",\r\n                  fontWeight: \"inherit\",\r\n                  boxShadow: \"inherit\",\r\n                  borderRadius: \"inherit\",\r\n                  padding: \"inherit\",\r\n                }}\r\n              >\r\n                {state.snackbarMessage}\r\n              </Alert>\r\n            </Snackbar>\r\n          </Box>\r\n        </Container>\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ESDTable;\r\n","import ESDTable from \"../../../pages/ESD/Stations/ESDTable/ESDTable\";\r\nimport Menu from \"../../../pages/Menu/Menu\";\r\n\r\nfunction StationList() {\r\n  return <Menu componentToShow={<ESDTable/>}></Menu>;\r\n}\r\n\r\nexport default StationList;\r\n","import TokenApi from \"./TokenApi\";\r\n\r\n// Obtém todos os monitores\r\nexport const getAllMonitors = async () => {\r\n  try {\r\n    const { data } = await TokenApi.get(\"/todosMonitores\");\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching all monitors:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtém um monitor específico por ID\r\nexport const getMonitor = async (id) => {\r\n  try {\r\n    const { data } = await TokenApi.get(`/BuscarMonitores/${id}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(`Error fetching monitor with ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Cria um novo monitor\r\nexport const createMonitor = async (monitor) => {\r\n  try {\r\n    const { data } = await TokenApi.post(\"/adicionarMonitor\", monitor);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error creating monitor:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Atualiza um monitor existente por ID\r\nexport const updateMonitor = async (monitor) => {\r\n  console.log(\"monitor\", monitor);\r\n  try {\r\n    const { data } = await TokenApi.post(\"/adicionarMonitor\", monitor);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(`Error updating monitor with ID:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Deleta um monitor por ID\r\nexport const deleteMonitor = async (id) => {\r\n  try {\r\n    await TokenApi.delete(`/deleteMonitor?id=${id}`);\r\n  } catch (error) {\r\n    console.error(`Error deleting monitor with ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n  Tooltip,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst modalStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst MonitorModal = ({ open, handleClose, monitor }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-title\"\r\n      aria-describedby=\"modal-description\"\r\n    >\r\n      <Paper sx={modalStyle}>\r\n        <Tooltip title={monitor.serialNumber} arrow>\r\n          <Typography variant=\"h6\" id=\"modal-title\" gutterBottom>\r\n          Monitor: {monitor.serialNumber}\r\n          </Typography>\r\n        </Tooltip>\r\n        <Box component=\"form\" noValidate autoComplete=\"off\">\r\n          <TextField\r\n            fullWidth\r\n            disabled\r\n            required\r\n            label={t(\"ESD_TEST.TABLE.USER_ID\")}\r\n            defaultValue={monitor.serialNumber}\r\n            margin=\"normal\"\r\n            InputProps={{\r\n              sx: {\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n              },\r\n            }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            disabled\r\n            required\r\n            label={t(\"ESD_TEST.TABLE.NAME\")}\r\n            defaultValue={monitor.description}\r\n            margin=\"normal\"\r\n            InputProps={{\r\n              sx: {\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n              },\r\n            }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            disabled\r\n            required\r\n            label={t(\"ESD_MONITOR.STATUS_MONITOR\")}\r\n            defaultValue={monitor.status}\r\n            margin=\"normal\"\r\n            InputProps={{\r\n              sx: {\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n              },\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box sx={{ mt: 2, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Button variant=\"contained\" color=\"success\" onClick={handleClose}>\r\n            {t(\"ESD_TEST.DIALOG.CLOSE\")}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MonitorModal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Select, MenuItem, FormControl, InputLabel } from \"@mui/material\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst MonitorForm = ({ open, handleClose, onSubmit }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [monitor, setMonitor] = useState({\r\n    serialNumber: \"\",\r\n    description: \"\",\r\n    status: \"idle\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [errorName, setErrorName] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setMonitor((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const nameRegex = /^(?![\\s-]+$)[\\w-]{1,50}$/;\r\n\r\n    if (!nameRegex.test(monitor.serialNumber)) {\r\n      setErrorName(\r\n        \"Número inválido. O nome deve conter apenas letras, números, hífens e underscores, e não pode ser composto apenas por espaços ou caracteres especiais. Além disso, deve ter no máximo 50 caracteres.\"\r\n      );\r\n      return;\r\n    }\r\n    if (!nameRegex.test(monitor.description)) {\r\n      setError(\r\n        \"Descrição inválida. A descrição deve conter apenas letras, números, hífens e underscores, e não pode ser composta apenas por espaços ou caracteres especiais. Além disso, deve ter no máximo 50 caracteres.\"\r\n      );\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    setErrorName(\"\");\r\n    try {\r\n      await onSubmit(monitor);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(\"Error creating monitor:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setError(\"\");\r\n    setErrorName(\"\");\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleCloseModal}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Paper sx={style}>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n          Adicionar Monitor\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"serialNumber\"\r\n            name=\"serialNumber\"\r\n            label={t(\"ESD_TEST.TABLE.USER_ID\", {\r\n              appName: \"App for Translations\",\r\n            })}\r\n            onChange={handleChange}\r\n            error={!!errorName}\r\n            helperText={errorName}\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            label={t(\"ESD_TEST.TABLE.NAME\", {\r\n              appName: \"App for Translations\",\r\n            })}\r\n            onChange={handleChange}\r\n            error={!!error}\r\n            helperText={error}\r\n          />\r\n          <FormControl fullWidth margin=\"normal\" required>\r\n            <InputLabel id=\"status\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"status\"\r\n              id=\"status\"\r\n              name=\"status\"\r\n              value={monitor.status}\r\n              onChange={handleChange}\r\n              label=\"Status\"\r\n            >\r\n              <MenuItem value=\"active\">Active</MenuItem>\r\n              <MenuItem value=\"inactive\">Inactive</MenuItem>\r\n              <MenuItem value=\"pending\">Pending</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <Box sx={{ mt: 2, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              sx={{ mt: 2 }}\r\n            >\r\n              {t(\"ESD_TEST.DIALOG.SAVE\", { appName: \"App for Translations\" })}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MonitorForm;\r\n","import React from \"react\";\r\nimport { Modal, Box, Typography } from \"@mui/material\";\r\nimport ButtonBootstrap from \"react-bootstrap/Button\";\r\n\r\nconst MonitorConfirmModal = ({ open, handleClose, handleConfirm, title, description }) => {\r\n    const modalStyle = {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      width: 400,\r\n      bgcolor: 'background.paper',\r\n      boxShadow: 24,\r\n      p: 4,\r\n      borderRadius: 2,\r\n    };\r\n  return (\r\n    <Modal open={open} onClose={handleClose}>\r\n      <Box sx={{ ...modalStyle }}>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {title}\r\n        </Typography>\r\n        <Typography sx={{ mt: 2 }}>\r\n          {description}\r\n        </Typography>\r\n        <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n          <ButtonBootstrap style={{ marginTop: \"10px\", marginLeft: \"4px\" }}\r\n              variant=\"outline-success\" onClick={handleClose} sx={{ mr: 1 }}>Cancel</ButtonBootstrap>\r\n          <ButtonBootstrap style={{ marginTop: \"10px\", marginLeft: \"4px\" }}\r\n              variant=\"danger\" onClick={handleConfirm} color=\"error\">Delete</ButtonBootstrap>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nexport default MonitorConfirmModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Select, MenuItem, FormControl, InputLabel } from \"@mui/material\";\r\n\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst MonitorEditForm = ({ open, handleClose, onSubmit, initialData }) => {\r\n  const {\r\n    t,\r\n    i18n: { changeLanguage, language },\r\n  } = useTranslation();\r\n  const [currentLanguage, setCurrentLanguage] = useState(language);\r\n\r\n  const handleChangeLanguage = () => {\r\n    const newLanguage = currentLanguage === \"en\" ? \"pt\" : \"en\";\r\n    setCurrentLanguage(newLanguage);\r\n    changeLanguage(newLanguage);\r\n  };\r\n\r\n  const [monitor, setMonitor] = useState({\r\n    id: \"\",\r\n    description: \"\",\r\n    serialNumber: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setMonitor(initialData);\r\n    }\r\n  }, [initialData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setMonitor((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await onSubmit(monitor);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(\"Error creating or updating monitor:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Paper sx={style}>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n          {t(\"ESD_MONITOR.DIALOG.EDIT_MONITOR\", {\r\n            appName: \"App for Translations\",\r\n          })}\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"outlined-title\"\r\n            name=\"serialNumber\"\r\n            label={t(\"ESD_MONITOR.TABLE.NAME\", {\r\n              appName: \"App for Translations\",\r\n            })}\r\n            value={monitor.serialNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            margin=\"normal\"\r\n            id=\"outlined-description\"\r\n            name=\"description\"\r\n            label={t(\"ESD_MONITOR.TABLE.USER_ID\", {\r\n              appName: \"App for Translations\",\r\n            })}\r\n            value={monitor.description}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <FormControl fullWidth margin=\"normal\" required>\r\n            <InputLabel id=\"status\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"status\"\r\n              id=\"status\"\r\n              name=\"status\"\r\n              value={monitor.status}\r\n              onChange={handleChange}\r\n              label=\"Status\"\r\n            >\r\n              <MenuItem value=\"active\">Active</MenuItem>\r\n              <MenuItem value=\"inactive\">Inactive</MenuItem>\r\n              <MenuItem value=\"pending\">Pending</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}>\r\n            <Button\r\n              onClick={handleClose}\r\n              variant=\"outlined\"\r\n              color=\"success\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              {t(\"ESD_MONITOR.DIALOG.CLOSE\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"success\">\r\n              {t(\"ESD_MONITOR.DIALOG.SAVE\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MonitorEditForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  getAllMonitors,\r\n  createMonitor,\r\n  deleteMonitor,\r\n  updateMonitor,\r\n} from \"../../../../api/monitorApi\";\r\nimport {\r\n  IconButton,\r\n  Box,\r\n  Snackbar,\r\n  Alert,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  TextField,\r\n  Container,\r\n  Tooltip,\r\n  Typography,\r\n  TablePagination,\r\n} from \"@mui/material\";\r\nimport { Delete, Info, Edit as EditIcon } from \"@mui/icons-material\";\r\nimport MonitorModal from \"../MonitorModal/MonitorModal\";\r\nimport MonitorForm from \"../MonitorForm/MonitorForm\";\r\nimport MonitorConfirmModal from \"../MonitorConfirmModal/MonitorConfirmModal\";\r\nimport MonitorEditForm from \"../MonitorEditForm/MonitorEditForm\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./MonitorTable.css\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst MonitorTable = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const [state, setState] = useState({\r\n    allMonitors: [],\r\n    monitor: {},\r\n    open: false,\r\n    openModal: false,\r\n    openEditModal: false,\r\n    editCell: null,\r\n    editData: null,\r\n    deleteConfirmOpen: false,\r\n    monitorToDelete: null,\r\n    snackbarOpen: false,\r\n    snackbarMessage: \"\",\r\n    snackbarSeverity: \"success\",\r\n    filterSerialNumber: \"\",\r\n    filterDescription: \"\",\r\n    page: 0,\r\n    rowsPerPage: 10,\r\n  });\r\n\r\n  const handleStateChange = (changes) => {\r\n    setState((prevState) => ({ ...prevState, ...changes }));\r\n  };\r\n\r\n  const showSnackbar = (message, severity = \"success\") => {\r\n    handleStateChange({\r\n      snackbarMessage: message,\r\n      snackbarSeverity: severity,\r\n      snackbarOpen: true,\r\n    });\r\n  };\r\n\r\n  const handleOpen = (monitor) => handleStateChange({ monitor, open: true });\r\n  const handleClose = () => handleStateChange({ open: false });\r\n  const handleEditClose = () =>\r\n    handleStateChange({ openEditModal: false, editData: null });\r\n  const handleOpenModal = () => handleStateChange({ openModal: true });\r\n  const handleCloseModal = () => handleStateChange({ openModal: false });\r\n  const handleDeleteOpen = (monitor) =>\r\n    handleStateChange({ monitor, monitorToDelete: monitor, deleteConfirmOpen: true });\r\n  const handleDeleteClose = () =>\r\n    handleStateChange({ deleteConfirmOpen: false, monitorToDelete: null });\r\n\r\n  const handleEditOpen = (monitor) => {\r\n    handleStateChange({ editData: monitor, openEditModal: true });\r\n  };\r\n\r\n  const handleCreateMonitor = async (monitor) => {\r\n    try {\r\n      await createMonitor(monitor);\r\n      const result = await getAllMonitors();\r\n      handleStateChange({ allMonitors: result });\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.CREATE_SUCCESS\", {\r\n          appName: \"App for Translations\",\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.TOAST_ERROR\", { appName: \"App for Translations\" }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteMonitor(id);\r\n      handleStateChange({\r\n        allMonitors: state.allMonitors.filter((monitor) => monitor.id !== id),\r\n      });\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.DELETE_SUCCESS\", {\r\n          appName: \"App for Translations\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.TOAST_ERROR\", { appName: \"App for Translations\" }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEditCellChange = async (params) => {\r\n    try {\r\n      await createMonitor(params);\r\n      const result = await getAllMonitors();\r\n      handleStateChange({ allMonitors: result });\r\n           showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.UPDATE_SUCCESS\", {\r\n          appName: \"App for Translations\",\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.TOAST_ERROR\", { appName: \"App for Translations\" }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchDataAllUsers = async () => {\r\n      try {\r\n        const result = await getAllMonitors();\r\n        handleStateChange({ allMonitors: result });\r\n      } catch (error) {\r\n        if (error.message === \"Request failed with status code 401\") {\r\n          localStorage.removeItem(\"token\");\r\n          navigate(\"/\");\r\n        }\r\n        showSnackbar(t(error.message));\r\n      }\r\n    };\r\n    fetchDataAllUsers();\r\n  }, []);\r\n\r\n  const handleConfirmDelete = async () => {\r\n    await handleDelete(state.monitorToDelete.id);\r\n    if (state.monitorToDelete) {\r\n      handleDeleteClose();\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    handleStateChange({ [name]: value });\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    handleStateChange({ page: newPage });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    handleStateChange({\r\n      rowsPerPage: parseInt(event.target.value, 10),\r\n      page: 0,\r\n    });\r\n  };\r\n\r\n  const filteredMonitors = (\r\n    Array.isArray(state.allMonitors) ? state.allMonitors : []\r\n  ).filter((monitor) => {\r\n    const serialNumber = monitor.serialNumber\r\n      ? monitor.serialNumber.toLowerCase()\r\n      : \"\";\r\n    const description = monitor.description\r\n      ? monitor.description.toLowerCase()\r\n      : \"\";\r\n    const filterSerialNumber = state.filterSerialNumber.toLowerCase();\r\n    const filterDescription = state.filterDescription.toLowerCase();\r\n    return (\r\n      serialNumber.includes(filterSerialNumber) &&\r\n      description.includes(filterDescription)\r\n    );\r\n  });\r\n\r\n  const paginatedMonitors = filteredMonitors.slice(\r\n    Math.max(0, state.page * state.rowsPerPage),\r\n    Math.max(0, state.page * state.rowsPerPage + state.rowsPerPage)\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Typography paragraph>\r\n        <Container>\r\n          <Box>\r\n            <Row>\r\n              <Col sm={10}>\r\n                <TextField\r\n                  name=\"filterSerialNumber\"\r\n                  label={t(\"ESD_MONITOR.TABLE.USER_ID\", {\r\n                    appName: \"App for Translations\",\r\n                  })}\r\n                  variant=\"outlined\"\r\n                  value={state.filterSerialNumber}\r\n                  onChange={handleFilterChange}\r\n                  sx={{ mb: 2, mr: 2 }}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <TextField\r\n                  name=\"filterDescription\"\r\n                  label={t(\"ESD_MONITOR.TABLE.NAME\", {\r\n                    appName: \"App for Translations\",\r\n                  })}\r\n                  variant=\"outlined\"\r\n                  value={state.filterDescription}\r\n                  onChange={handleFilterChange}\r\n                  sx={{ mb: 2, mr: 2 }}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col sm={2}>\r\n                <Button\r\n                  id=\"add-button\"\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  onClick={handleOpenModal}\r\n                >\r\n                  {t(\"ESD_MONITOR.ADD_MONITOR\", {\r\n                    appName: \"App for Translations\",\r\n                  })}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            {paginatedMonitors.length === 0 ? (\r\n              <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\">\r\n                Sua lista está vazia\r\n              </Typography>\r\n            ) : (\r\n              <List>\r\n                {paginatedMonitors.map((monitor) => (\r\n                  <ListItem\r\n                    key={monitor.id}\r\n                    divider\r\n                    sx={{ display: \"flex\", alignItems: \"center\" }}\r\n                  >\r\n                    <Tooltip\r\n                      title={`Número de série: ${monitor.serialNumber}, Descrição: ${monitor.description}, Status:${monitor.status}`}\r\n                      arrow\r\n                    >\r\n                      <ListItemText\r\n                        primary={monitor.serialNumber}\r\n                        secondary={                    <>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {monitor.description}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\">\r\n                              {monitor.status}\r\n                          </Typography>\r\n                      </>}\r\n                        className=\"textOverflow\"\r\n                      />\r\n                    </Tooltip>\r\n                    <ListItemSecondaryAction>\r\n                      <Tooltip title={t(\"ESD_MONITOR.EDIT_MONITOR\")}>\r\n                        <IconButton\r\n                          edge=\"end\"\r\n                          aria-label=\"edit\"\r\n                          onClick={() => handleEditOpen(monitor)}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title={t(\"ESD_MONITOR.INFO_MONITOR\")}>\r\n                        <IconButton\r\n                          edge=\"end\"\r\n                          aria-label=\"info\"\r\n                          onClick={() => handleOpen(monitor)}\r\n                        >\r\n                          <Info />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title={t(\"ESD_MONITOR.DELETE_MONITOR\")}>\r\n                        <IconButton\r\n                          edge=\"end\"\r\n                          aria-label=\"delete\"\r\n                          onClick={() => handleDeleteOpen(monitor)}\r\n                        >\r\n                          <Delete />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            )}\r\n            <TablePagination\r\n              component=\"div\"\r\n              count={filteredMonitors.length}\r\n              page={state.page}\r\n              onPageChange={handleChangePage}\r\n              rowsPerPage={state.rowsPerPage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n            <MonitorModal\r\n              open={state.open}\r\n              handleClose={handleClose}\r\n              monitorName={state.monitor.serialNumber}\r\n              monitor={state.monitor}\r\n            />\r\n            <MonitorForm\r\n              open={state.openModal}\r\n              handleClose={handleCloseModal}\r\n              onSubmit={handleCreateMonitor}\r\n            />\r\n            <MonitorEditForm\r\n              open={state.openEditModal}\r\n              handleClose={handleEditClose}\r\n              onSubmit={handleEditCellChange}\r\n              initialData={state.editData}\r\n            />\r\n            <MonitorConfirmModal\r\n              open={state.deleteConfirmOpen}\r\n              handleClose={handleDeleteClose}\r\n              handleConfirm={handleConfirmDelete}\r\n              title={t(\"ESD_MONITOR.CONFIRM_DIALOG.CONFIRM-TEXT\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              description={t(\"ESD_MONITOR.CONFIRM_DIALOG.CONFIRM-TEXT\", {\r\n                appName: \"App for Translations\",\r\n              }) + \" \" + state.monitor.serialNumber + \"?\"}\r\n            />\r\n            <Snackbar\r\n              open={state.snackbarOpen}\r\n              autoHideDuration={6000}\r\n              onClose={() => handleStateChange({ snackbarOpen: false })}\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              className={`snackbar-content snackbar-${state.snackbarSeverity}`}\r\n            >\r\n              <Alert\r\n                onClose={() => handleStateChange({ snackbarOpen: false })}\r\n                severity={state.snackbarSeverity}\r\n                sx={{\r\n                  backgroundColor: \"inherit\",\r\n                  color: \"inherit\",\r\n                  fontWeight: \"inherit\",\r\n                  boxShadow: \"inherit\",\r\n                  borderRadius: \"inherit\",\r\n                  padding: \"inherit\",\r\n                }}\r\n              >\r\n                {state.snackbarMessage}\r\n              </Alert>\r\n            </Snackbar>\r\n          </Box>\r\n        </Container>\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonitorTable;\r\n","import MonitorTable from \"../../../pages/ESD/Monitor/MonitorTable/MonitorTable\";\r\nimport Menu from \"../../../pages/Menu/Menu\";\r\n\r\nfunction Monitors() {\r\n  return <Menu componentToShow={<MonitorTable />}></Menu>;\r\n  }\r\n  \r\n  export default Monitors;\r\n  ","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/lab\");","import {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Logo from \"./logo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport TokenApi from \"../../api/TokenApi\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setusername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { login } = useAuth();\r\n  const [state, setState] = useState({\r\n    snackbarOpen: false,\r\n    snackbarMessage: \"\",\r\n    snackbarSeverity: \"success\",\r\n  });\r\n  const handleStateChange = (changes) => {\r\n    setState((prevState) => ({ ...prevState, ...changes }));\r\n  };\r\n  const handleClick = () => {\r\n    setLoading(true);\r\n    TokenApi.post(\"/api/Authentication\", {\r\n      username: username,\r\n      password: password,\r\n    })\r\n      .then(({ data }) => {\r\n        localStorage.setItem(\"token\", data.token);\r\n        localStorage.setItem(\"role\", data.role);\r\n        localStorage.setItem(\"name\", data.name);\r\n        navigate(\"/\");\r\n      })\r\n      .catch(() => {\r\n        showSnackbar('Login ou senha invalidos, tente novamente!');\r\n      })\r\n      .finally(() => {\r\n        const userData = { token: localStorage.getItem(\"token\") };\r\n        login(userData);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const showSnackbar = (message, severity = \"error\") => {\r\n    handleStateChange({\r\n      snackbarMessage: message,\r\n      snackbarSeverity: severity,\r\n      snackbarOpen: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Snackbar\r\n        open={error.length > 0}\r\n        autoHideDuration={6000}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert severity=\"error\" sx={{ width: \"100%\" }}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Card\r\n        sx={{\r\n          mt: 5,\r\n          ml: 5,\r\n          mb: 10,\r\n          pt: 5,\r\n          px: 10,\r\n          width: \"40%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" align=\"center\">\r\n          LOGIN\r\n        </Typography>\r\n        <img src={Logo} alt=\"\" width=\"200px\" style={{ marginTop: \"20px\" }} />\r\n\r\n        <TextField\r\n          label=\"Nome\"\r\n          sx={{ my: 3 }}\r\n          fullWidth\r\n          onChange={(e) => setusername(e.target.value)}\r\n          value={username}\r\n        />\r\n        <TextField\r\n          label=\"Senha\"\r\n          type=\"password\"\r\n          sx={{ mb: 3 }}\r\n          fullWidth\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n        />\r\n\r\n        <LoadingButton\r\n          loading={loading}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          fullWidth\r\n          onClick={handleClick}\r\n          sx={{ mb: 4 }}\r\n        >\r\n          Fazer Login\r\n        </LoadingButton>\r\n\r\n      </Card>\r\n      <Snackbar\r\n              open={state.snackbarOpen}\r\n              autoHideDuration={6000}\r\n              onClose={() => handleStateChange({ snackbarOpen: false })}\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              className={`snackbar-content snackbar-${state.snackbarSeverity}`}\r\n            >\r\n              <Alert\r\n                onClose={() => handleStateChange({ snackbarOpen: false })}\r\n                severity={state.snackbarSeverity}\r\n                sx={{\r\n                  backgroundColor: \"inherit\",\r\n                  color: \"inherit\",\r\n                  fontWeight: \"inherit\",\r\n                  boxShadow: \"inherit\",\r\n                  borderRadius: \"inherit\",\r\n                  padding: \"inherit\",\r\n                }}\r\n              >\r\n                {state.snackbarMessage}\r\n              </Alert>\r\n            </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport TokenApi from \"../../api/TokenApi\";\r\nimport Logo from \"./logo.png\";\r\n\r\nconst SignUpPage = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [rolesName, setRolesName] = useState(\"\");\r\n  const [badge, setBadge] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: \"\",\r\n    severity: \"success\",\r\n  });\r\n\r\n  const handleSnackbarOpen = (message, severity) => {\r\n    setSnackbar({\r\n      open: true,\r\n      message,\r\n      severity,\r\n    });\r\n  };\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbar((prev) => ({ ...prev, open: false }));\r\n  };\r\n\r\n  const handleChangeRole = (event) => {\r\n    setRolesName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (password !== confirmPassword) {\r\n      handleSnackbarOpen(\"As senhas não coincidem.\", \"error\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await TokenApi.post(\"/criacao\", {\r\n        username,\r\n        password,\r\n        rolesName,\r\n        badge,\r\n      });\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setRolesName(\"\");\r\n      setBadge(\"\");\r\n      handleSnackbarOpen(\"Usuário criado com sucesso!\", \"success\");\r\n    } catch (error) {\r\n      handleSnackbarOpen(error.message, \"error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"xs\"\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        mt: 8,\r\n      }}\r\n    >\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleSnackbarClose}\r\n          severity={snackbar.severity}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Card\r\n        sx={{\r\n          p: 4,\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          Cadastro\r\n        </Typography>\r\n        <img\r\n          src={Logo}\r\n          alt=\"Logo\"\r\n          width=\"150px\"\r\n          style={{ marginBottom: \"20px\" }}\r\n        />\r\n        <TextField\r\n          label=\"Nome\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"Matricula\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={badge}\r\n          onChange={(e) => setBadge(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"Senha\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"Confirmar Senha\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n        <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\r\n          <InputLabel id=\"role-select-label\">Função</InputLabel>\r\n          <Select\r\n            labelId=\"role-select-label\"\r\n            value={rolesName}\r\n            onChange={handleChangeRole}\r\n            label=\"Função\"\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>Selecione uma Função</em>\r\n            </MenuItem>\r\n            <MenuItem value=\"administrator\">Administrador</MenuItem>\r\n            <MenuItem value=\"operator\">Operador</MenuItem>\r\n            <MenuItem value=\"developer\">Desenvolvedor</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <LoadingButton\r\n          loading={loading}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          onClick={handleSubmit}\r\n          sx={{ mt: 2 }}\r\n        >\r\n          Cadastrar\r\n        </LoadingButton>\r\n        <Button\r\n          sx={{ mt: 2 }}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          onClick={() => navigate(\"/\")}\r\n        >\r\n          Voltar para home\r\n        </Button>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const isAuthenticated = !!localStorage.getItem('token');\r\n    return isAuthenticated ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst ESDHomeModal = ({ open, handleClose, produce }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Paper sx={style}>\r\n        <Box component=\"form\" noValidate autoComplete=\"off\">\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                disabled\r\n                required\r\n                label=\"Data\"\r\n                defaultValue={\"17/04/2024\"}\r\n                margin=\"normal\"\r\n              />\r\n            </Typography>\r\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                disabled\r\n                required\r\n                label=\"Hora\"\r\n                defaultValue={\"17:45\"}\r\n                margin=\"normal\"\r\n              />\r\n            </Typography>\r\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                disabled\r\n                required\r\n                label=\"Operador\"\r\n                defaultValue={\"John Doe\"}\r\n                margin=\"normal\"\r\n              />\r\n            </Typography>\r\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                disabled\r\n                required\r\n                label=\"Logs\"\r\n                defaultValue={\"Lorem ipsum dolor sit amet, consectetur\"}\r\n                margin=\"normal\"\r\n              />\r\n            </Typography>\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ mt: 2, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Button variant=\"contained\" color=\"success\" onClick={handleClose}>\r\n            {t(\"ESD_OPERATOR.DIALOG.CLOSE\", {\r\n              appName: \"App for Translations\",\r\n            })}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ESDHomeModal;\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@mui/x-data-grid\");","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Button,\r\n  Box,\r\n  Switch,\r\n  FormControlLabel,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport ESDHomeModal from \"../ESDHomeModal/ESDHomeModal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\"; // Importar o DataGrid e GridToolbar\r\nimport { getMonitor } from \"../../../../api/monitorApi\";\r\n\r\nimport \"./ESDTable.css\";\r\n\r\n// Função para gerar dados fictícios\r\nconst generateFakeData = (numItems) => {\r\n  const statuses = [\"ok\", \"error\", \"warning\"]; // Status fictícios\r\n  const data = [];\r\n\r\n  for (let i = 1; i <= numItems; i++) {\r\n    data.push({\r\n      id: `id-${i}`,\r\n      monitorEsdId: i,\r\n      linkStationAndLineId: i,\r\n      positionSequence: i,\r\n      created: new Date().toISOString(),\r\n      lastUpdated: new Date().toISOString(),\r\n      status: statuses[i % statuses.length], // Status fictício baseado no índice\r\n    });\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\n// Função para obter a cor com base no status\r\nconst getStatusColor = (status) => {\r\n  switch (status) {\r\n    case \"ok\":\r\n      return \"green\";\r\n    case \"error\":\r\n      return \"red\";\r\n    case \"warning\":\r\n      return \"orange\";\r\n    default:\r\n      return \"gray\";\r\n  }\r\n};\r\n\r\n// Função para determinar a classe CSS com base no status\r\nconst getStatusClass = (status) => {\r\n  return status === \"ok\" ? \"ok\" : status === \"error\" ? \"ng\" : \"warning\";\r\n};\r\n\r\n// Função para definir a margem com base na coluna (se necessário)\r\nconst setMargin = () => {\r\n  return \"\";\r\n};\r\n\r\nconst ESDDashboardPage = () => {\r\n  const navigate = useNavigate();\r\n  const [columns, setColumns] = useState([\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 3, 2, 5, 14, 15, 16, 17, 18,\r\n  ]);\r\n  const [rows, setRows] = useState([\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\r\n  ]);\r\n\r\n  //table\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const [columnsTable, setColumnsTable] = useState([\r\n    { field: \"id\", headerName: \"ID\", width: 180 },\r\n    { field: \"serialNumber\", headerName: \"Monitor\", width: 180 },\r\n    {\r\n      field: \"linkStationAndLineId\",\r\n      headerName: \"Link Station and Line ID\",\r\n      width: 180,\r\n    },\r\n    { field: \"positionSequence\", headerName: \"Position Sequence\", width: 180 },\r\n    { field: \"created\", headerName: \"Created\", width: 180 },\r\n    { field: \"lastUpdated\", headerName: \"Last Updated\", width: 180 },\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: getStatusColor(params.value),\r\n            color: \"white\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            borderRadius: 1,\r\n          }}\r\n        >\r\n          {params.value}\r\n        </Box>\r\n      ),\r\n    },\r\n  ]);\r\n  const [rowsTable, setRowsTable] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [viewMode, setViewMode] = useState(\"map\"); // Estado para alternar entre visualizações\r\n  const [searchText, setSearchText] = useState(\"\"); // Estado para o texto de busca\r\n  //table\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchDataAllUsers = async () => {\r\n      try {\r\n        // Simulação de obtenção de dados\r\n        const data = generateFakeData(288); // Gerar 288 itens\r\n        // setRowsTable(data); // Atualize o estado com os dados gerados\r\n        // Atualize os dados com o nome do monitor\r\n        const updatedData = await Promise.all(\r\n          data.map(async (item) => {\r\n            const monitorData = await getMonitor(item.monitorEsdId);\r\n            return {\r\n              ...item,\r\n              serialNumber: monitorData.serialNumber, // Assuma que getMonitor retorna o serialNumber diretamente\r\n            };\r\n          })\r\n        );\r\n        console.log('updatedData', updatedData)\r\n        setRowsTable(updatedData);\r\n      } catch (error) {\r\n        if (error.message === \"Request failed with status code 401\") {\r\n          localStorage.removeItem(\"token\");\r\n          navigate(\"/\");\r\n        }\r\n      }\r\n    };\r\n    fetchDataAllUsers();\r\n  }, [navigate]);\r\n\r\n  const [status] = useState([\r\n    { indexColumn: 0, indexRow: 0, status: \"ok\" },\r\n    { indexColumn: 1, indexRow: 0, status: \"error\" },\r\n    { indexColumn: 2, indexRow: 2, status: \"ok\" },\r\n    { indexColumn: 3, indexRow: 1, status: \"ok\" },\r\n    { indexColumn: 3, indexRow: 6, status: \"ok\" },\r\n    { indexColumn: 4, indexRow: 0, status: \"ok\" },\r\n  ]);\r\n\r\n  const getStatusTooltip = (indexColumn, indexRow) => {\r\n    const item = status.find(\r\n      (s) => s.indexColumn === indexColumn && s.indexRow === indexRow\r\n    );\r\n    return item\r\n      ? `Coluna: ${indexColumn}, Linha:  ${indexRow}  Status: ${item.status}`\r\n      : `Coluna: ${indexColumn}, Linha:  ${indexRow}  Status: 'Desconectado'`;\r\n  };\r\n\r\n  const getStatusClass = (indexColumn, indexRow) => {\r\n    const item = status.find(\r\n      (s) => s.indexColumn === indexColumn && s.indexRow === indexRow\r\n    );\r\n    return item ? (item.status === \"ok\" ? \"ok\" : \"ng\") : \"\";\r\n  };\r\n\r\n  const setMargin = (indexColumn) => {\r\n    return indexColumn % 3 === 0 ? \"mRight\" : \"\";\r\n  };\r\n\r\n  const addColumn = () => {\r\n    setColumns([...columns, columns.length + 1]);\r\n  };\r\n\r\n  const addRow = () => {\r\n    setRows([...rows, rows.length + 1]);\r\n  };\r\n\r\n  // Filtrar os dados com base no texto de busca\r\n  const filteredRows = rowsTable.filter((row) =>\r\n    Object.values(row).some((value) =>\r\n      value.toString().toLowerCase().includes(searchText.toLowerCase())\r\n    )\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ mb: 2, display: \"flex\", alignItems: \"center\", gap: 2 }}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={viewMode === \"map\"}\r\n              onChange={() => setViewMode(viewMode === \"map\" ? \"grid\" : \"map\")}\r\n            />\r\n          }\r\n          label={viewMode === \"map\" ? \"Exibir Grid\" : \"Exibir Mapa\"}\r\n        />\r\n        {viewMode === \"grid\" && (\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Buscar\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            sx={{ width: 300 }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      {viewMode === \"map\" ? (\r\n        <div className=\"container\">\r\n          {columns.map((_, indexColumn) => (\r\n            <div key={`column-${indexColumn}`}>\r\n              {rows.map((_, indexRow) => (\r\n                <Tooltip\r\n                  key={`tooltip-col${indexColumn}-row${indexRow} --item${status.status}`}\r\n                  title={getStatusTooltip(indexColumn, indexRow)}\r\n                  placement=\"top\"\r\n                  arrow\r\n                >\r\n                  <p\r\n                    onClick={handleClickOpen}\r\n                    key={`col${indexColumn}-row${indexRow}-${indexColumn}`}\r\n                    className={`box ${getStatusClass(\r\n                      indexColumn,\r\n                      indexRow\r\n                    )} ${setMargin(indexColumn)}`}\r\n                    id={`col${indexColumn}-row${indexRow}`}\r\n                  >\r\n                    <div className=\"icon-one-one\"></div>\r\n                  </p>\r\n                </Tooltip>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <Box className=\"grid-table\">\r\n          <DataGrid\r\n            rows={filteredRows}\r\n            columns={columnsTable}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[10]}\r\n            components={{ Toolbar: GridToolbar }} // Adiciona a barra de ferramentas com filtros\r\n          />\r\n        </Box>\r\n      )}\r\n\r\n      <ESDHomeModal open={open} handleClose={handleClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ESDDashboardPage;\r\n","import React, { Component } from \"react\";\r\nimport ESDHomeDashboardPage from \"../ESD/ESDHome/ESDHomeDashboardPage/ESDHomeDashboardPage\";\r\n\r\nclass DashboardPage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <ESDHomeDashboardPage></ESDHomeDashboardPage>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardPage;\r\n\r\n","import React from \"react\";\r\nimport DashboardPage from \"../../../pages/DashboardPage/DashboardPage\";\r\nimport Menu from \"../../../pages/Menu/Menu\";\r\n\r\nfunction DashboardESD() {\r\n  return <Menu componentToShow={<DashboardPage />} />;\r\n}\r\n\r\nexport default DashboardESD;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  getAllMonitors,\r\n  createMonitor,\r\n  deleteMonitor,\r\n  updateMonitor,\r\n} from \"../../../../api/monitorApi\";\r\n\r\nimport { getAllLines } from \"../../../../api/linerApi\";\r\nimport {\r\n  IconButton,\r\n  Box,\r\n  Snackbar,\r\n  Alert,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  TextField,\r\n  Container,\r\n  Tooltip,\r\n  Typography,\r\n  TablePagination,\r\n} from \"@mui/material\";\r\nimport { Delete, Info, Edit as EditIcon } from \"@mui/icons-material\";\r\n// import MonitorModal from \"../MonitorModal/MonitorModal\";\r\n// import MonitorForm from \"../MonitorForm/MonitorForm\";\r\n// import MonitorConfirmModal from \"../MonitorConfirmModal/MonitorConfirmModal\";\r\n// import MonitorEditForm from \"../MonitorEditForm/MonitorEditForm\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import \"./MonitorTable.css\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst LineTable = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const [state, setState] = useState({\r\n    allMonitors: [],\r\n    monitor: {},\r\n    open: false,\r\n    openModal: false,\r\n    openEditModal: false,\r\n    editCell: null,\r\n    editData: null,\r\n    deleteConfirmOpen: false,\r\n    monitorToDelete: null,\r\n    snackbarOpen: false,\r\n    snackbarMessage: \"\",\r\n    snackbarSeverity: \"success\",\r\n    filterSerialNumber: \"\",\r\n    filterDescription: \"\",\r\n    page: 0,\r\n    rowsPerPage: 10,\r\n  });\r\n\r\n  const handleStateChange = (changes) => {\r\n    setState((prevState) => ({ ...prevState, ...changes }));\r\n  };\r\n\r\n  const showSnackbar = (message, severity = \"success\") => {\r\n    handleStateChange({\r\n      snackbarMessage: message,\r\n      snackbarSeverity: severity,\r\n      snackbarOpen: true,\r\n    });\r\n  };\r\n\r\n  const handleOpen = (monitor) => handleStateChange({ monitor, open: true });\r\n  const handleClose = () => handleStateChange({ open: false });\r\n  const handleEditClose = () =>\r\n    handleStateChange({ openEditModal: false, editData: null });\r\n  const handleOpenModal = () => handleStateChange({ openModal: true });\r\n  const handleCloseModal = () => handleStateChange({ openModal: false });\r\n  const handleDeleteOpen = (monitor) =>\r\n    handleStateChange({ monitorToDelete: monitor, deleteConfirmOpen: true });\r\n  const handleDeleteClose = () =>\r\n    handleStateChange({ deleteConfirmOpen: false, monitorToDelete: null });\r\n\r\n  const handleEditOpen = (monitor) => {\r\n    handleStateChange({ editData: monitor, openEditModal: true });\r\n  };\r\n\r\n  const handleCreateMonitor = async (monitor) => {\r\n    try {\r\n      await createMonitor(monitor);\r\n      const result = await getAllMonitors();\r\n      handleStateChange({ allMonitors: result });\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.CREATE_SUCCESS\", {\r\n          appName: \"App for Translations\",\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.TOAST_ERROR\", { appName: \"App for Translations\" }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteMonitor(id);\r\n      handleStateChange({\r\n        allMonitors: state.allMonitors.filter((monitor) => monitor.id !== id),\r\n      });\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.DELETE_SUCCESS\", {\r\n          appName: \"App for Translations\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.TOAST_ERROR\", { appName: \"App for Translations\" }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEditCellChange = async (params) => {\r\n    try {\r\n      await createMonitor(params);\r\n      const result = await getAllMonitors();\r\n      handleStateChange({ allMonitors: result });\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.UPDATE_SUCCESS\", {\r\n          appName: \"App for Translations\",\r\n        })\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      showSnackbar(\r\n        t(\"ESD_MONITOR.TOAST.TOAST_ERROR\", { appName: \"App for Translations\" }),\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchDataAllUsers = async () => {\r\n      try {\r\n        const result = await getAllMonitors();\r\n        const resultLine = await getAllLines();\r\n        console.log(\"resultLine\", resultLine);\r\n        handleStateChange({ allMonitors: resultLine });\r\n      } catch (error) {\r\n        if (error.message === \"Request failed with status code 401\") {\r\n          localStorage.removeItem(\"token\");\r\n          navigate(\"/\");\r\n        }\r\n        showSnackbar(t(error.message));\r\n      }\r\n    };\r\n    fetchDataAllUsers();\r\n  }, []);\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (state.monitorToDelete) {\r\n      await handleDelete(state.monitorToDelete.id);\r\n      handleDeleteClose();\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    handleStateChange({ [name]: value });\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    handleStateChange({ page: newPage });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    handleStateChange({\r\n      rowsPerPage: parseInt(event.target.value, 10),\r\n      page: 0,\r\n    });\r\n  };\r\n\r\n  const filteredMonitors = (\r\n    Array.isArray(state.allMonitors) ? state.allMonitors : []\r\n  ).filter((monitor) => {\r\n    const serialNumber = monitor.serialNumber\r\n      ? monitor.serialNumber.toLowerCase()\r\n      : \"\";\r\n    const description = monitor.description\r\n      ? monitor.description.toLowerCase()\r\n      : \"\";\r\n    const filterSerialNumber = state.filterSerialNumber.toLowerCase();\r\n    const filterDescription = state.filterDescription.toLowerCase();\r\n    return (\r\n      serialNumber.includes(filterSerialNumber) &&\r\n      description.includes(filterDescription)\r\n    );\r\n  });\r\n\r\n  const paginatedMonitors = filteredMonitors.slice(\r\n    Math.max(0, state.page * state.rowsPerPage),\r\n    Math.max(0, state.page * state.rowsPerPage + state.rowsPerPage)\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Typography paragraph>\r\n        <Container>\r\n          <Box>\r\n            <Row>\r\n              <Col sm={10}>\r\n                <TextField\r\n                  name=\"filterSerialNumber\"\r\n                  label={t(\"ESD_MONITOR.TABLE.USER_ID\", {\r\n                    appName: \"App for Translations\",\r\n                  })}\r\n                  variant=\"outlined\"\r\n                  value={state.filterSerialNumber}\r\n                  onChange={handleFilterChange}\r\n                  sx={{ mb: 2, mr: 2 }}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <TextField\r\n                  name=\"filterDescription\"\r\n                  label={t(\"ESD_MONITOR.TABLE.NAME\", {\r\n                    appName: \"App for Translations\",\r\n                  })}\r\n                  variant=\"outlined\"\r\n                  value={state.filterDescription}\r\n                  onChange={handleFilterChange}\r\n                  sx={{ mb: 2, mr: 2 }}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col sm={2}>\r\n                <Button\r\n                  id=\"add-button\"\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  onClick={handleOpenModal}\r\n                >\r\n                  {t(\"ESD_MONITOR.ADD_MONITOR\", {\r\n                    appName: \"App for Translations\",\r\n                  })}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            {paginatedMonitors.length === 0 ? (\r\n              <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\">\r\n                Sua lista está vazia\r\n              </Typography>\r\n            ) : (\r\n              <List>\r\n                {paginatedMonitors.map((monitor) => (\r\n                  <ListItem\r\n                    key={monitor.id}\r\n                    divider\r\n                    sx={{ display: \"flex\", alignItems: \"center\" }}\r\n                  >\r\n                    <Tooltip\r\n                      title={`Id: ${monitor.id}, Linha: ${monitor.name}`}\r\n                      arrow\r\n                    >\r\n                      <ListItemText\r\n                        primary={`Id: ${monitor.id}`}\r\n                        secondary={\r\n                          <>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                            {`Linha: ${monitor.name}`}\r\n                            </Typography>\r\n                          </>\r\n                        }\r\n                        className=\"textOverflow\"\r\n                      />\r\n                    </Tooltip>\r\n                    <ListItemSecondaryAction>\r\n                      <Tooltip title={t(\"ESD_MONITOR.EDIT_MONITOR\")}>\r\n                        <IconButton\r\n                          edge=\"end\"\r\n                          aria-label=\"edit\"\r\n                          onClick={() => handleEditOpen(monitor)}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title={t(\"ESD_MONITOR.INFO_MONITOR\")}>\r\n                        <IconButton\r\n                          edge=\"end\"\r\n                          aria-label=\"info\"\r\n                          onClick={() => handleOpen(monitor)}\r\n                        >\r\n                          <Info />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title={t(\"ESD_MONITOR.DELETE_MONITOR\")}>\r\n                        <IconButton\r\n                          edge=\"end\"\r\n                          aria-label=\"delete\"\r\n                          onClick={() => handleDeleteOpen(monitor)}\r\n                        >\r\n                          <Delete />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            )}\r\n            <TablePagination\r\n              component=\"div\"\r\n              count={filteredMonitors.length}\r\n              page={state.page}\r\n              onPageChange={handleChangePage}\r\n              rowsPerPage={state.rowsPerPage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n            {/* <MonitorModal\r\n              open={state.open}\r\n              handleClose={handleClose}\r\n              monitorName={state.monitor.serialNumber}\r\n              monitor={state.monitor}\r\n            /> */}\r\n            {/* <MonitorForm\r\n              open={state.openModal}\r\n              handleClose={handleCloseModal}\r\n              onSubmit={handleCreateMonitor}\r\n            /> */}\r\n            {/* <MonitorEditForm\r\n              open={state.openEditModal}\r\n              handleClose={handleEditClose}\r\n              onSubmit={handleEditCellChange}\r\n              initialData={state.editData}\r\n            /> */}\r\n            {/* <MonitorConfirmModal\r\n              open={state.deleteConfirmOpen}\r\n              handleClose={handleDeleteClose}\r\n              handleConfirm={handleConfirmDelete}\r\n              title={t(\"ESD_MONITOR.CONFIRM_DIALOG.DELETE_STATION\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n              description={t(\"ESD_MONITOR.CONFIRM_DIALOG.CONFIRM-TEXT\", {\r\n                appName: \"App for Translations\",\r\n              })}\r\n            /> */}\r\n            <Snackbar\r\n              open={state.snackbarOpen}\r\n              autoHideDuration={6000}\r\n              onClose={() => handleStateChange({ snackbarOpen: false })}\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              className={`snackbar-content snackbar-${state.snackbarSeverity}`}\r\n            >\r\n              <Alert\r\n                onClose={() => handleStateChange({ snackbarOpen: false })}\r\n                severity={state.snackbarSeverity}\r\n                sx={{\r\n                  backgroundColor: \"inherit\",\r\n                  color: \"inherit\",\r\n                  fontWeight: \"inherit\",\r\n                  boxShadow: \"inherit\",\r\n                  borderRadius: \"inherit\",\r\n                  padding: \"inherit\",\r\n                }}\r\n              >\r\n                {state.snackbarMessage}\r\n              </Alert>\r\n            </Snackbar>\r\n          </Box>\r\n        </Container>\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineTable;\r\n","import TokenApi from \"./TokenApi\";\r\n\r\n// Obtém todos os linees\r\nexport const getAllLines = async () => {\r\n  try {\r\n    const { data } = await TokenApi.get(\"/TodasLinhas\");\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching all lines:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtém um Line específico por ID\r\nexport const getLine = async (id) => {\r\n  try {\r\n    const { data } = await TokenApi.get(`/BuscarLinha/${id}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(`Error fetching Line with ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Cria um novo Line\r\nexport const createLine = async (line) => {\r\n  try {\r\n    const { data } = await TokenApi.post(\"/adicionarLinha\", line);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error creating line:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Atualiza um line existente por ID\r\nexport const updateLine = async (line) => {\r\n  console.log(\"line\", line);\r\n  try {\r\n    const { data } = await TokenApi.post(\"/adicionarLine\", line);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(`Error updating line with ID:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Deleta um line por ID\r\nexport const deleteLine = async (id) => {\r\n  try {\r\n    await TokenApi.delete(`/DeleteLinha/${id}`);\r\n  } catch (error) {\r\n    console.error(`Error deleting line with ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"../../../pages/Menu/Menu\";\r\nimport LineTable from \"../../../pages/ESD/Line/LineTable/LineTable\";\r\n\r\nfunction Line() {\r\n  return <Menu componentToShow={<LineTable />} />;\r\n}\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport \"./i18n.js\"; // ts => import './i18n.ts'\r\nimport { useEffect } from \"react\";\r\nimport { useAuth } from \"./context/AuthContext.js\";\r\nimport HomePage from \"./pages/HomePage/HomePage.jsx\";\r\nimport Operators from \"./components/ESD/Operators/Operators.jsx\";\r\nimport StationList from \"./components/ESD/StationList/StationList.jsx\";\r\nimport Monitors from \"./components/ESD/Monitors/Monitors.jsx\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport LoginPage from \"./pages/LoginPage/LoginPage.jsx\";\r\nimport SignUpPage from \"./pages/SignUpPage/SignUpPage.jsx\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport DashboardESD from \"./components/ESD/DashboardESD/DashboardESD.jsx\";\r\nimport Line from \"./components/ESD/Line/Line.jsx\";\r\nconst AppRoutes = () => {\r\n  useEffect(() => {\r\n    document.title = \"FCT Auto Test\";\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <HomePage />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route path=\"/login\" element={<LoginPage />} />\r\n        <Route\r\n          path=\"/register\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <SignUpPage />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/dashboard\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <DashboardESD />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/users\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <Operators />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/stations\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <StationList />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/esd-dashboard\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <DashboardESD />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/monitors\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <Monitors />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/liners\"\r\n          element={\r\n            <ProtectedRoute>\r\n              <Line />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport AppRoutes from \"./AppRoutes.js\";\r\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport { AuthProvider } from \"./context/AuthContext.js\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(\r\n  <AuthProvider>\r\n    <HashRouter>\r\n          <AppRoutes />\r\n    </HashRouter>\r\n  </AuthProvider>\r\n);\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","require","i18n","initReactI18next","init","resources","pt","ptJSON","lng","AuthContext","createContext","AuthProvider","_ref","children","user","setUser","useState","_jsx","Provider","value","login","userData","logout","localStorage","removeItem","useAuth","useContext","HomePage","navigate","useNavigate","useEffect","token","getItem","_Fragment","TokenApi","axios","baseURL","process","interceptors","request","use","config","headers","concat","console","error","Promise","reject","getAllOperators","async","data","createOperators","form","FormData","append","operator","name","badge","post","open","handleClose","t","useTranslation","Modal","onClose","_jsxs","Paper","className","Typography","variant","id","appName","Box","component","noValidate","autoComplete","TextField","fullWidth","disabled","required","label","defaultValue","margin","Button","color","onClick","onSubmit","station","setStation","errorName","setErrorName","errorBadge","setErrorBadge","handleChange","e","target","prev","preventDefault","valid","test","sx","mt","onChange","helperText","type","initialData","setOperator","FormControl","handleConfirm","title","description","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","display","justifyContent","ButtonBootstrap","style","marginTop","marginLeft","mr","OperatorTable","state","setState","allOperators","openModal","openEditModal","editCell","editData","deleteConfirmOpen","operatorToDelete","snackbarOpen","snackbarMessage","snackbarSeverity","loading","page","setPage","rowsPerPage","setRowsPerPage","searchName","setSearchName","searchBadge","setSearchBadge","handleStateChange","changes","prevState","showSnackbar","useCallback","message","arguments","length","undefined","handleDeleteClose","handleDelete","delete","deleteOperators","filter","result","fetchDataAllOperators","filterOperators","toLowerCase","includes","displayOperators","slice","Container","Row","Col","sm","filterName","event","mb","InputProps","endAdornment","InputAdornment","SearchIcon","filterDescription","handleOpenModal","ml","List","map","ListItem","divider","alignItems","Tooltip","arrow","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","handleEditOpen","EditIcon","handleOpen","Info","handleDeleteOpen","Delete","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","rowsPerPageOptions","OperatorModal","operatorName","OperatorForm","handleCloseModal","response","OperatorEditForm","handleEditClose","params","errors","Name","OperatorConfirmModal","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","backgroundColor","fontWeight","padding","getUserRoleFromToken","getMenuItems","userRole","text","icon","HomeIcon","path","roles","subItems","AccountCircleOutlinedIcon","PrecisionManufacturingOutlinedIcon","SensorsOutlinedIcon","PersonAddIcon","item","MenuList","menuItems","expandedItem","setExpandedItem","location","useLocation","currentPath","pathname","currentItem","find","_item$subItems","some","subItem","isSelected","index","React","disablePadding","ListItemButton","Link","to","handleItemClick","ListItemIcon","ExpandLess","ExpandMore","subIndex","Menu","_ref2","componentToShow","AppBar","zIndex","theme","drawer","Toolbar","flexGrow","Drawer","Card","overflowY","overflowX","CardContent","handleResponse","getAllJigs","createJigs","gutterBottom","checked","changeLanguage","language","currentLanguage","setCurrentLanguage","ESDTable","allJigs","stationToDelete","searchDescription","setSearchDescription","deleteJigs","fetchDataAllUsers","filterJigs","jig","paginatedJigs","paragraph","CircularProgress","align","ESDModal","stationName","ESDForm","ESDEditForm","ESDConfirmModal","getAllMonitors","createMonitor","monitor","deleteMonitor","modalStyle","serialNumber","overflow","textOverflow","status","setMonitor","setError","nameRegex","InputLabel","Select","labelId","MenuItem","MonitorTable","allMonitors","monitorToDelete","filterSerialNumber","handleFilterChange","filteredMonitors","Array","isArray","paginatedMonitors","Math","max","MonitorModal","monitorName","MonitorForm","MonitorEditForm","MonitorConfirmModal","LoginPage","username","setusername","password","setPassword","setLoading","px","flexDirection","src","Logo","alt","my","LoadingButton","handleClick","then","setItem","role","catch","finally","SignUpPage","setUsername","confirmPassword","setConfirmPassword","rolesName","setRolesName","setBadge","snackbar","setSnackbar","handleSnackbarOpen","handleSnackbarClose","maxWidth","marginBottom","Navigate","produce","getStatusColor","ESDDashboardPage","columns","setColumns","rows","setRows","openTable","setOpenTable","columnsTable","setColumnsTable","field","headerName","renderCell","height","rowsTable","setRowsTable","setOpen","viewMode","setViewMode","searchText","setSearchText","handleClickOpen","numItems","statuses","i","push","monitorEsdId","linkStationAndLineId","positionSequence","created","Date","toISOString","lastUpdated","generateFakeData","updatedData","all","monitorData","getMonitor","log","indexColumn","indexRow","getStatusTooltip","s","getStatusClass","setMargin","filteredRows","row","values","toString","gap","FormControlLabel","control","Switch","_","placement","DataGrid","pageSize","components","GridToolbar","ESDHomeModal","DashboardPage","Component","render","ESDHomeDashboardPage","LineTable","resultLine","getAllLines","AppRoutes","document","Routes","Route","element","ProtectedRoute","DashboardESD","Operators","StationList","Monitors","Line","ReactDOM","getElementById","HashRouter"],"sourceRoot":""}